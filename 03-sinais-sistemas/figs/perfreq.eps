%!PS-Adobe-2.0 EPSF-2.0
%%Title: perfreq.eps
%%Creator: gnuplot 4.2 patchlevel 2 
%%CreationDate: Tue Mar 10 05:51:48 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (perfreq.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 2 )
  /Author (Ronaldo de Freitas Zampolo,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Mar 10 05:51:48 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
700 4180 M
63 0 V
2497 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 580 4180 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
1.000 UL
LTb
700 4304 M
63 0 V
2497 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 580 4304 M
[ [(Helvetica) 200.0 0.0 true true 0 (0.2)]
] -66.7 MRshow
1.000 UL
LTb
700 4428 M
63 0 V
2497 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 580 4428 M
[ [(Helvetica) 200.0 0.0 true true 0 (0.4)]
] -66.7 MRshow
1.000 UL
LTb
700 4552 M
63 0 V
2497 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 580 4552 M
[ [(Helvetica) 200.0 0.0 true true 0 (0.6)]
] -66.7 MRshow
1.000 UL
LTb
700 4676 M
63 0 V
2497 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 580 4676 M
[ [(Helvetica) 200.0 0.0 true true 0 (0.8)]
] -66.7 MRshow
1.000 UL
LTb
700 4800 M
63 0 V
2497 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 580 4800 M
[ [(Helvetica) 200.0 0.0 true true 0 (1)]
] -66.7 MRshow
1.000 UL
LTb
700 4180 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 700 3980 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
1.000 UL
LTb
1212 4180 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 1212 3980 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
] -66.7 MCshow
1.000 UL
LTb
1724 4180 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 1724 3980 M
[ [(Helvetica) 200.0 0.0 true true 0 (20)]
] -66.7 MCshow
1.000 UL
LTb
2236 4180 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 2236 3980 M
[ [(Helvetica) 200.0 0.0 true true 0 (30)]
] -66.7 MCshow
1.000 UL
LTb
2748 4180 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 2748 3980 M
[ [(Helvetica) 200.0 0.0 true true 0 (40)]
] -66.7 MCshow
1.000 UL
LTb
3260 4180 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 3260 3980 M
[ [(Helvetica) 200.0 0.0 true true 0 (50)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
700 4800 N
0 -620 V
2560 0 V
0 620 V
-2560 0 V
Z stroke
1.000 UP
1.000 UL
LTb
0.500 UL
LT0
1.00 0.00 0.00 C 700 4180 M
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
52 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
52 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
52 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
52 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
52 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
52 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
52 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
52 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
52 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
52 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
1.000 UP
stroke
LT1
1.00 0.00 0.00 C 700 4800 Circle
751 4800 Circle
802 4800 Circle
854 4800 Circle
905 4800 Circle
956 4800 Circle
1007 4800 Circle
1058 4800 Circle
1110 4800 Circle
1161 4800 Circle
1212 4800 Circle
1263 4800 Circle
1314 4800 Circle
1366 4800 Circle
1417 4800 Circle
1468 4800 Circle
1519 4800 Circle
1570 4800 Circle
1622 4800 Circle
1673 4800 Circle
1724 4800 Circle
1775 4800 Circle
1826 4800 Circle
1878 4800 Circle
1929 4800 Circle
1980 4800 Circle
2031 4800 Circle
2082 4800 Circle
2134 4800 Circle
2185 4800 Circle
2236 4800 Circle
2287 4800 Circle
2338 4800 Circle
2390 4800 Circle
2441 4800 Circle
2492 4800 Circle
2543 4800 Circle
2594 4800 Circle
2646 4800 Circle
2697 4800 Circle
2748 4800 Circle
2799 4800 Circle
2850 4800 Circle
2902 4800 Circle
2953 4800 Circle
3004 4800 Circle
3055 4800 Circle
3106 4800 Circle
3158 4800 Circle
3209 4800 Circle
3260 4800 Circle
0.500 UL
LT2
0.00 0.00 0.00 C 700 4180 M
2560 0 V
stroke
1.000 UL
LTb
700 4800 N
0 -620 V
2560 0 V
0 620 V
-2560 0 V
Z stroke
1.000 UP
1.000 UL
LTb
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
4300 4180 M
63 0 V
2497 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 4180 4180 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
1.000 UL
LTb
4300 4304 M
63 0 V
2497 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 4180 4304 M
[ [(Helvetica) 200.0 0.0 true true 0 (0.2)]
] -66.7 MRshow
1.000 UL
LTb
4300 4428 M
63 0 V
2497 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 4180 4428 M
[ [(Helvetica) 200.0 0.0 true true 0 (0.4)]
] -66.7 MRshow
1.000 UL
LTb
4300 4552 M
63 0 V
2497 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 4180 4552 M
[ [(Helvetica) 200.0 0.0 true true 0 (0.6)]
] -66.7 MRshow
1.000 UL
LTb
4300 4676 M
63 0 V
2497 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 4180 4676 M
[ [(Helvetica) 200.0 0.0 true true 0 (0.8)]
] -66.7 MRshow
1.000 UL
LTb
4300 4800 M
63 0 V
2497 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 4180 4800 M
[ [(Helvetica) 200.0 0.0 true true 0 (1)]
] -66.7 MRshow
1.000 UL
LTb
4300 4180 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 4300 3980 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
1.000 UL
LTb
4812 4180 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 4812 3980 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
] -66.7 MCshow
1.000 UL
LTb
5324 4180 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 5324 3980 M
[ [(Helvetica) 200.0 0.0 true true 0 (20)]
] -66.7 MCshow
1.000 UL
LTb
5836 4180 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 5836 3980 M
[ [(Helvetica) 200.0 0.0 true true 0 (30)]
] -66.7 MCshow
1.000 UL
LTb
6348 4180 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 6348 3980 M
[ [(Helvetica) 200.0 0.0 true true 0 (40)]
] -66.7 MCshow
1.000 UL
LTb
6860 4180 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 6860 3980 M
[ [(Helvetica) 200.0 0.0 true true 0 (50)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
4300 4800 N
0 -620 V
2560 0 V
0 620 V
-2560 0 V
Z stroke
1.000 UP
1.000 UL
LTb
0.500 UL
LT0
0.00 0.00 1.00 C 4300 4180 M
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
52 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
52 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
52 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
52 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
52 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
52 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
52 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
52 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
52 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
52 -620 R
0 620 V
51 -620 R
0 620 V
51 -620 R
0 620 V
1.000 UP
stroke
LT1
0.00 0.00 1.00 C 4300 4800 Circle
4351 4800 Circle
4402 4800 Circle
4454 4800 Circle
4505 4800 Circle
4556 4800 Circle
4607 4800 Circle
4658 4800 Circle
4710 4800 Circle
4761 4800 Circle
4812 4800 Circle
4863 4800 Circle
4914 4800 Circle
4966 4800 Circle
5017 4800 Circle
5068 4800 Circle
5119 4800 Circle
5170 4800 Circle
5222 4800 Circle
5273 4800 Circle
5324 4800 Circle
5375 4800 Circle
5426 4800 Circle
5478 4800 Circle
5529 4800 Circle
5580 4800 Circle
5631 4800 Circle
5682 4800 Circle
5734 4800 Circle
5785 4800 Circle
5836 4800 Circle
5887 4800 Circle
5938 4800 Circle
5990 4800 Circle
6041 4800 Circle
6092 4800 Circle
6143 4800 Circle
6194 4800 Circle
6246 4800 Circle
6297 4800 Circle
6348 4800 Circle
6399 4800 Circle
6450 4800 Circle
6502 4800 Circle
6553 4800 Circle
6604 4800 Circle
6655 4800 Circle
6706 4800 Circle
6758 4800 Circle
6809 4800 Circle
6860 4800 Circle
0.500 UL
LT2
0.00 0.00 0.00 C 4300 4180 M
2560 0 V
stroke
1.000 UL
LTb
4300 4800 N
0 -620 V
2560 0 V
0 620 V
-2560 0 V
Z stroke
1.000 UP
1.000 UL
LTb
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
820 2920 M
63 0 V
2377 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 700 2920 M
[ [(Helvetica) 200.0 0.0 true true 0 (-1)]
] -66.7 MRshow
1.000 UL
LTb
820 3075 M
63 0 V
2377 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 700 3075 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.5)]
] -66.7 MRshow
1.000 UL
LTb
820 3230 M
63 0 V
2377 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 700 3230 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
1.000 UL
LTb
820 3385 M
63 0 V
2377 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 700 3385 M
[ [(Helvetica) 200.0 0.0 true true 0 (0.5)]
] -66.7 MRshow
1.000 UL
LTb
820 3540 M
63 0 V
2377 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 700 3540 M
[ [(Helvetica) 200.0 0.0 true true 0 (1)]
] -66.7 MRshow
1.000 UL
LTb
820 2920 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 820 2720 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
1.000 UL
LTb
1308 2920 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 1308 2720 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
] -66.7 MCshow
1.000 UL
LTb
1796 2920 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 1796 2720 M
[ [(Helvetica) 200.0 0.0 true true 0 (20)]
] -66.7 MCshow
1.000 UL
LTb
2284 2920 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 2284 2720 M
[ [(Helvetica) 200.0 0.0 true true 0 (30)]
] -66.7 MCshow
1.000 UL
LTb
2772 2920 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 2772 2720 M
[ [(Helvetica) 200.0 0.0 true true 0 (40)]
] -66.7 MCshow
1.000 UL
LTb
3260 2920 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 3260 2720 M
[ [(Helvetica) 200.0 0.0 true true 0 (50)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
820 3540 N
0 -620 V
2440 0 V
0 620 V
-2440 0 V
Z stroke
1.000 UP
1.000 UL
LTb
0.500 UL
LT0
1.00 0.00 0.00 C 820 3230 M
0 310 V
49 -310 R
0 -242 V
49 242 R
0 68 V
48 -68 R
0 135 V
49 -135 R
0 -280 V
49 280 R
0 302 V
49 -302 R
0 -192 V
49 192 R
0 -2 V
48 2 R
0 195 V
49 -195 R
0 -303 V
49 303 R
0 278 V
49 -278 R
0 -131 V
49 131 R
0 -73 V
48 73 R
0 245 V
49 -245 R
0 -310 V
49 310 R
0 239 V
49 -239 R
0 -64 V
49 64 R
0 -139 V
48 139 R
0 282 V
49 -282 R
0 -301 V
49 301 R
0 188 V
49 -188 R
0 6 V
49 -6 R
0 -199 V
48 199 R
0 304 V
49 -304 R
0 -276 V
49 276 R
0 128 V
49 -128 R
0 77 V
49 -77 R
0 -247 V
48 247 R
0 310 V
49 -310 R
0 -237 V
49 237 R
0 60 V
49 -60 R
0 143 V
49 -143 R
0 -283 V
48 283 R
0 300 V
49 -300 R
0 -185 V
49 185 R
0 -11 V
49 11 R
0 202 V
49 -202 R
0 -305 V
48 305 R
0 274 V
49 -274 R
0 -124 V
49 124 R
0 -81 V
49 81 R
0 250 V
49 -250 R
0 -310 V
48 310 R
0 234 V
49 -234 R
0 -56 V
49 56 R
0 -147 V
49 147 R
0 285 V
49 -285 R
0 -299 V
48 299 R
0 182 V
49 -182 R
0 15 V
49 -15 R
0 -205 V
1.000 UP
stroke
LT1
1.00 0.00 0.00 C 820 3540 Circle
869 2988 Circle
918 3298 Circle
966 3365 Circle
1015 2950 Circle
1064 3532 Circle
1113 3038 Circle
1162 3228 Circle
1210 3425 Circle
1259 2927 Circle
1308 3508 Circle
1357 3099 Circle
1406 3157 Circle
1454 3475 Circle
1503 2920 Circle
1552 3469 Circle
1601 3166 Circle
1650 3091 Circle
1698 3512 Circle
1747 2929 Circle
1796 3418 Circle
1845 3236 Circle
1894 3031 Circle
1942 3534 Circle
1991 2954 Circle
2040 3358 Circle
2089 3307 Circle
2138 2983 Circle
2186 3540 Circle
2235 2993 Circle
2284 3290 Circle
2333 3373 Circle
2382 2947 Circle
2430 3530 Circle
2479 3045 Circle
2528 3219 Circle
2577 3432 Circle
2626 2925 Circle
2674 3504 Circle
2723 3106 Circle
2772 3149 Circle
2821 3480 Circle
2870 2920 Circle
2918 3464 Circle
2967 3174 Circle
3016 3083 Circle
3065 3515 Circle
3114 2931 Circle
3162 3412 Circle
3211 3245 Circle
3260 3025 Circle
0.500 UL
LT2
0.00 0.00 0.00 C 820 3230 M
2440 0 V
stroke
1.000 UL
LTb
820 3540 N
0 -620 V
2440 0 V
0 620 V
-2440 0 V
Z stroke
1.000 UP
1.000 UL
LTb
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
4420 2920 M
63 0 V
2377 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 4300 2920 M
[ [(Helvetica) 200.0 0.0 true true 0 (-1)]
] -66.7 MRshow
1.000 UL
LTb
4420 3075 M
63 0 V
2377 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 4300 3075 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.5)]
] -66.7 MRshow
1.000 UL
LTb
4420 3230 M
63 0 V
2377 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 4300 3230 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
1.000 UL
LTb
4420 3385 M
63 0 V
2377 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 4300 3385 M
[ [(Helvetica) 200.0 0.0 true true 0 (0.5)]
] -66.7 MRshow
1.000 UL
LTb
4420 3540 M
63 0 V
2377 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 4300 3540 M
[ [(Helvetica) 200.0 0.0 true true 0 (1)]
] -66.7 MRshow
1.000 UL
LTb
4420 2920 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 4420 2720 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
1.000 UL
LTb
4908 2920 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 4908 2720 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
] -66.7 MCshow
1.000 UL
LTb
5396 2920 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 5396 2720 M
[ [(Helvetica) 200.0 0.0 true true 0 (20)]
] -66.7 MCshow
1.000 UL
LTb
5884 2920 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 5884 2720 M
[ [(Helvetica) 200.0 0.0 true true 0 (30)]
] -66.7 MCshow
1.000 UL
LTb
6372 2920 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 6372 2720 M
[ [(Helvetica) 200.0 0.0 true true 0 (40)]
] -66.7 MCshow
1.000 UL
LTb
6860 2920 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 6860 2720 M
[ [(Helvetica) 200.0 0.0 true true 0 (50)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
4420 3540 N
0 -620 V
2440 0 V
0 620 V
-2440 0 V
Z stroke
1.000 UP
1.000 UL
LTb
0.500 UL
LT0
0.00 0.00 1.00 C 4420 3230 M
0 310 V
49 -310 R
0 -242 V
49 242 R
0 68 V
48 -68 R
0 135 V
49 -135 R
0 -280 V
49 280 R
0 302 V
49 -302 R
0 -192 V
49 192 R
0 -2 V
48 2 R
0 195 V
49 -195 R
0 -303 V
49 303 R
0 278 V
49 -278 R
0 -131 V
49 131 R
0 -73 V
48 73 R
0 245 V
49 -245 R
0 -310 V
49 310 R
0 239 V
49 -239 R
0 -64 V
49 64 R
0 -139 V
48 139 R
0 282 V
49 -282 R
0 -301 V
49 301 R
0 188 V
49 -188 R
0 6 V
49 -6 R
0 -199 V
48 199 R
0 304 V
49 -304 R
0 -276 V
49 276 R
0 128 V
49 -128 R
0 77 V
49 -77 R
0 -247 V
48 247 R
0 310 V
49 -310 R
0 -237 V
49 237 R
0 60 V
49 -60 R
0 143 V
49 -143 R
0 -283 V
48 283 R
0 300 V
49 -300 R
0 -185 V
49 185 R
0 -11 V
49 11 R
0 202 V
49 -202 R
0 -305 V
48 305 R
0 274 V
49 -274 R
0 -124 V
49 124 R
0 -81 V
49 81 R
0 250 V
49 -250 R
0 -310 V
48 310 R
0 234 V
49 -234 R
0 -56 V
49 56 R
0 -147 V
49 147 R
0 285 V
49 -285 R
0 -299 V
48 299 R
0 182 V
49 -182 R
0 15 V
49 -15 R
0 -205 V
1.000 UP
stroke
LT1
0.00 0.00 1.00 C 4420 3540 Circle
4469 2988 Circle
4518 3298 Circle
4566 3365 Circle
4615 2950 Circle
4664 3532 Circle
4713 3038 Circle
4762 3228 Circle
4810 3425 Circle
4859 2927 Circle
4908 3508 Circle
4957 3099 Circle
5006 3157 Circle
5054 3475 Circle
5103 2920 Circle
5152 3469 Circle
5201 3166 Circle
5250 3091 Circle
5298 3512 Circle
5347 2929 Circle
5396 3418 Circle
5445 3236 Circle
5494 3031 Circle
5542 3534 Circle
5591 2954 Circle
5640 3358 Circle
5689 3307 Circle
5738 2983 Circle
5786 3540 Circle
5835 2993 Circle
5884 3290 Circle
5933 3373 Circle
5982 2947 Circle
6030 3530 Circle
6079 3045 Circle
6128 3219 Circle
6177 3432 Circle
6226 2925 Circle
6274 3504 Circle
6323 3106 Circle
6372 3149 Circle
6421 3480 Circle
6470 2920 Circle
6518 3464 Circle
6567 3174 Circle
6616 3083 Circle
6665 3515 Circle
6714 2931 Circle
6762 3412 Circle
6811 3245 Circle
6860 3025 Circle
0.500 UL
LT2
0.00 0.00 0.00 C 4420 3230 M
2440 0 V
stroke
1.000 UL
LTb
4420 3540 N
0 -620 V
2440 0 V
0 620 V
-2440 0 V
Z stroke
1.000 UP
1.000 UL
LTb
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
820 1660 M
63 0 V
2377 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 700 1660 M
[ [(Helvetica) 200.0 0.0 true true 0 (-1)]
] -66.7 MRshow
1.000 UL
LTb
820 1815 M
63 0 V
2377 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 700 1815 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.5)]
] -66.7 MRshow
1.000 UL
LTb
820 1970 M
63 0 V
2377 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 700 1970 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
1.000 UL
LTb
820 2125 M
63 0 V
2377 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 700 2125 M
[ [(Helvetica) 200.0 0.0 true true 0 (0.5)]
] -66.7 MRshow
1.000 UL
LTb
820 2280 M
63 0 V
2377 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 700 2280 M
[ [(Helvetica) 200.0 0.0 true true 0 (1)]
] -66.7 MRshow
1.000 UL
LTb
820 1660 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 820 1460 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
1.000 UL
LTb
1308 1660 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 1308 1460 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
] -66.7 MCshow
1.000 UL
LTb
1796 1660 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 1796 1460 M
[ [(Helvetica) 200.0 0.0 true true 0 (20)]
] -66.7 MCshow
1.000 UL
LTb
2284 1660 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 2284 1460 M
[ [(Helvetica) 200.0 0.0 true true 0 (30)]
] -66.7 MCshow
1.000 UL
LTb
2772 1660 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 2772 1460 M
[ [(Helvetica) 200.0 0.0 true true 0 (40)]
] -66.7 MCshow
1.000 UL
LTb
3260 1660 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 3260 1460 M
[ [(Helvetica) 200.0 0.0 true true 0 (50)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
820 2280 N
0 -620 V
2440 0 V
0 620 V
-2440 0 V
Z stroke
1.000 UP
1.000 UL
LTb
0.500 UL
LT0
1.00 0.00 0.00 C 820 1970 M
0 310 V
49 -310 R
0 -307 V
49 307 R
0 296 V
48 -296 R
0 -280 V
49 280 R
0 257 V
49 -257 R
0 -229 V
49 229 R
0 195 V
49 -195 R
0 -157 V
48 157 R
0 116 V
49 -116 R
0 -73 V
49 73 R
0 27 V
49 -27 R
0 19 V
49 -19 R
0 -64 V
48 64 R
0 108 V
49 -108 R
0 -150 V
49 150 R
0 188 V
49 -188 R
0 -223 V
49 223 R
0 252 V
48 -252 R
0 -276 V
49 276 R
0 294 V
49 -294 R
0 -305 V
49 305 R
0 310 V
49 -310 R
0 -308 V
48 308 R
0 299 V
49 -299 R
0 -283 V
49 283 R
0 262 V
49 -262 R
0 -234 V
49 234 R
0 202 V
48 -202 R
0 -165 V
49 165 R
0 124 V
49 -124 R
0 -81 V
49 81 R
0 36 V
49 -36 R
0 10 V
48 -10 R
0 -56 V
49 56 R
0 100 V
49 -100 R
0 -142 V
49 142 R
0 182 V
49 -182 R
0 -217 V
48 217 R
0 247 V
49 -247 R
0 -272 V
49 272 R
0 291 V
49 -291 R
0 -304 V
49 304 R
0 310 V
48 -310 R
0 -309 V
49 309 R
0 301 V
49 -301 R
0 -287 V
49 287 R
0 266 V
49 -266 R
0 -240 V
48 240 R
0 208 V
49 -208 R
0 -172 V
49 172 R
0 132 V
1.000 UP
stroke
LT1
1.00 0.00 0.00 C 820 2280 Circle
869 1663 Circle
918 2266 Circle
966 1690 Circle
1015 2227 Circle
1064 1741 Circle
1113 2165 Circle
1162 1813 Circle
1210 2086 Circle
1259 1897 Circle
1308 1997 Circle
1357 1989 Circle
1406 1906 Circle
1454 2078 Circle
1503 1820 Circle
1552 2158 Circle
1601 1747 Circle
1650 2222 Circle
1698 1694 Circle
1747 2264 Circle
1796 1665 Circle
1845 2280 Circle
1894 1662 Circle
1942 2269 Circle
1991 1687 Circle
2040 2232 Circle
2089 1736 Circle
2138 2172 Circle
2186 1805 Circle
2235 2094 Circle
2284 1889 Circle
2333 2006 Circle
2382 1980 Circle
2430 1914 Circle
2479 2070 Circle
2528 1828 Circle
2577 2152 Circle
2626 1753 Circle
2674 2217 Circle
2723 1698 Circle
2772 2261 Circle
2821 1666 Circle
2870 2280 Circle
2918 1661 Circle
2967 2271 Circle
3016 1683 Circle
3065 2236 Circle
3114 1730 Circle
3162 2178 Circle
3211 1798 Circle
3260 2102 Circle
0.500 UL
LT2
0.00 0.00 0.00 C 820 1970 M
2440 0 V
stroke
1.000 UL
LTb
820 2280 N
0 -620 V
2440 0 V
0 620 V
-2440 0 V
Z stroke
1.000 UP
1.000 UL
LTb
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
4420 1660 M
63 0 V
2377 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 4300 1660 M
[ [(Helvetica) 200.0 0.0 true true 0 (-1)]
] -66.7 MRshow
1.000 UL
LTb
4420 1815 M
63 0 V
2377 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 4300 1815 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.5)]
] -66.7 MRshow
1.000 UL
LTb
4420 1970 M
63 0 V
2377 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 4300 1970 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
1.000 UL
LTb
4420 2125 M
63 0 V
2377 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 4300 2125 M
[ [(Helvetica) 200.0 0.0 true true 0 (0.5)]
] -66.7 MRshow
1.000 UL
LTb
4420 2280 M
63 0 V
2377 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 4300 2280 M
[ [(Helvetica) 200.0 0.0 true true 0 (1)]
] -66.7 MRshow
1.000 UL
LTb
4420 1660 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 4420 1460 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
1.000 UL
LTb
4908 1660 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 4908 1460 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
] -66.7 MCshow
1.000 UL
LTb
5396 1660 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 5396 1460 M
[ [(Helvetica) 200.0 0.0 true true 0 (20)]
] -66.7 MCshow
1.000 UL
LTb
5884 1660 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 5884 1460 M
[ [(Helvetica) 200.0 0.0 true true 0 (30)]
] -66.7 MCshow
1.000 UL
LTb
6372 1660 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 6372 1460 M
[ [(Helvetica) 200.0 0.0 true true 0 (40)]
] -66.7 MCshow
1.000 UL
LTb
6860 1660 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 6860 1460 M
[ [(Helvetica) 200.0 0.0 true true 0 (50)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
4420 2280 N
0 -620 V
2440 0 V
0 620 V
-2440 0 V
Z stroke
1.000 UP
1.000 UL
LTb
0.500 UL
LT0
0.00 0.00 1.00 C 4420 1970 M
0 310 V
49 -310 R
0 -307 V
49 307 R
0 296 V
48 -296 R
0 -280 V
49 280 R
0 257 V
49 -257 R
0 -229 V
49 229 R
0 195 V
49 -195 R
0 -157 V
48 157 R
0 116 V
49 -116 R
0 -73 V
49 73 R
0 27 V
49 -27 R
0 19 V
49 -19 R
0 -64 V
48 64 R
0 108 V
49 -108 R
0 -150 V
49 150 R
0 188 V
49 -188 R
0 -223 V
49 223 R
0 252 V
48 -252 R
0 -276 V
49 276 R
0 294 V
49 -294 R
0 -305 V
49 305 R
0 310 V
49 -310 R
0 -308 V
48 308 R
0 299 V
49 -299 R
0 -283 V
49 283 R
0 262 V
49 -262 R
0 -234 V
49 234 R
0 202 V
48 -202 R
0 -165 V
49 165 R
0 124 V
49 -124 R
0 -81 V
49 81 R
0 36 V
49 -36 R
0 10 V
48 -10 R
0 -56 V
49 56 R
0 100 V
49 -100 R
0 -142 V
49 142 R
0 182 V
49 -182 R
0 -217 V
48 217 R
0 247 V
49 -247 R
0 -272 V
49 272 R
0 291 V
49 -291 R
0 -304 V
49 304 R
0 310 V
48 -310 R
0 -309 V
49 309 R
0 301 V
49 -301 R
0 -287 V
49 287 R
0 266 V
49 -266 R
0 -240 V
48 240 R
0 208 V
49 -208 R
0 -172 V
49 172 R
0 132 V
1.000 UP
stroke
LT1
0.00 0.00 1.00 C 4420 2280 Circle
4469 1663 Circle
4518 2266 Circle
4566 1690 Circle
4615 2227 Circle
4664 1741 Circle
4713 2165 Circle
4762 1813 Circle
4810 2086 Circle
4859 1897 Circle
4908 1997 Circle
4957 1989 Circle
5006 1906 Circle
5054 2078 Circle
5103 1820 Circle
5152 2158 Circle
5201 1747 Circle
5250 2222 Circle
5298 1694 Circle
5347 2264 Circle
5396 1665 Circle
5445 2280 Circle
5494 1662 Circle
5542 2269 Circle
5591 1687 Circle
5640 2232 Circle
5689 1736 Circle
5738 2172 Circle
5786 1805 Circle
5835 2094 Circle
5884 1889 Circle
5933 2006 Circle
5982 1980 Circle
6030 1914 Circle
6079 2070 Circle
6128 1828 Circle
6177 2152 Circle
6226 1753 Circle
6274 2217 Circle
6323 1698 Circle
6372 2261 Circle
6421 1666 Circle
6470 2280 Circle
6518 1661 Circle
6567 2271 Circle
6616 1683 Circle
6665 2236 Circle
6714 1730 Circle
6762 2178 Circle
6811 1798 Circle
6860 2102 Circle
0.500 UL
LT2
0.00 0.00 0.00 C 4420 1970 M
2440 0 V
stroke
1.000 UL
LTb
4420 2280 N
0 -620 V
2440 0 V
0 620 V
-2440 0 V
Z stroke
1.000 UP
1.000 UL
LTb
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
820 400 M
63 0 V
2377 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 700 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (-1)]
] -66.7 MRshow
1.000 UL
LTb
820 555 M
63 0 V
2377 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 700 555 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.5)]
] -66.7 MRshow
1.000 UL
LTb
820 710 M
63 0 V
2377 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 700 710 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
1.000 UL
LTb
820 865 M
63 0 V
2377 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 700 865 M
[ [(Helvetica) 200.0 0.0 true true 0 (0.5)]
] -66.7 MRshow
1.000 UL
LTb
820 1020 M
63 0 V
2377 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 700 1020 M
[ [(Helvetica) 200.0 0.0 true true 0 (1)]
] -66.7 MRshow
1.000 UL
LTb
820 400 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 820 200 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
1.000 UL
LTb
1308 400 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 1308 200 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
] -66.7 MCshow
1.000 UL
LTb
1796 400 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 1796 200 M
[ [(Helvetica) 200.0 0.0 true true 0 (20)]
] -66.7 MCshow
1.000 UL
LTb
2284 400 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 2284 200 M
[ [(Helvetica) 200.0 0.0 true true 0 (30)]
] -66.7 MCshow
1.000 UL
LTb
2772 400 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 2772 200 M
[ [(Helvetica) 200.0 0.0 true true 0 (40)]
] -66.7 MCshow
1.000 UL
LTb
3260 400 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 3260 200 M
[ [(Helvetica) 200.0 0.0 true true 0 (50)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
820 1020 N
0 -620 V
2440 0 V
0 620 V
-2440 0 V
Z stroke
1.000 UP
1.000 UL
LTb
0.500 UL
LT0
1.00 0.00 0.00 C 820 710 M
0 310 V
869 710 M
0 -279 V
49 279 R
0 192 V
966 710 M
0 -66 V
49 66 R
0 -73 V
49 73 R
0 198 V
49 -198 R
0 -282 V
49 282 R
0 310 V
48 -310 R
0 -275 V
49 275 R
0 185 V
49 -185 R
0 -58 V
49 58 R
0 -81 V
49 81 R
0 204 V
48 -204 R
0 -285 V
49 285 R
0 310 V
49 -310 R
0 -272 V
49 272 R
0 179 V
49 -179 R
0 -50 V
48 50 R
0 -88 V
49 88 R
0 209 V
49 -209 R
0 -288 V
49 288 R
0 309 V
49 -309 R
0 -268 V
48 268 R
0 173 V
49 -173 R
0 -43 V
49 43 R
0 -96 V
49 96 R
0 215 V
49 -215 R
0 -291 V
48 291 R
0 308 V
49 -308 R
0 -264 V
49 264 R
0 166 V
49 -166 R
0 -35 V
49 35 R
0 -103 V
48 103 R
0 221 V
49 -221 R
0 -294 V
49 294 R
0 308 V
49 -308 R
0 -260 V
49 260 R
0 159 V
48 -159 R
0 -27 V
49 27 R
0 -111 V
49 111 R
0 226 V
49 -226 R
0 -296 V
49 296 R
0 306 V
48 -306 R
0 -255 V
49 255 R
0 152 V
49 -152 R
0 -19 V
49 19 R
0 -118 V
49 118 R
0 231 V
48 -231 R
0 -298 V
49 298 R
0 305 V
49 -305 R
0 -251 V
1.000 UP
stroke
LT1
1.00 0.00 0.00 C 820 1020 Circle
869 431 Circle
918 902 Circle
966 644 Circle
1015 637 Circle
1064 908 Circle
1113 428 Circle
1162 1020 Circle
1210 435 Circle
1259 895 Circle
1308 652 Circle
1357 629 Circle
1406 914 Circle
1454 425 Circle
1503 1020 Circle
1552 438 Circle
1601 889 Circle
1650 660 Circle
1698 622 Circle
1747 919 Circle
1796 422 Circle
1845 1019 Circle
1894 442 Circle
1942 883 Circle
1991 667 Circle
2040 614 Circle
2089 925 Circle
2138 419 Circle
2186 1018 Circle
2235 446 Circle
2284 876 Circle
2333 675 Circle
2382 607 Circle
2430 931 Circle
2479 416 Circle
2528 1018 Circle
2577 450 Circle
2626 869 Circle
2674 683 Circle
2723 599 Circle
2772 936 Circle
2821 414 Circle
2870 1016 Circle
2918 455 Circle
2967 862 Circle
3016 691 Circle
3065 592 Circle
3114 941 Circle
3162 412 Circle
3211 1015 Circle
3260 459 Circle
0.500 UL
LT2
0.00 0.00 0.00 C 820 710 M
2440 0 V
stroke
1.000 UL
LTb
820 1020 N
0 -620 V
2440 0 V
0 620 V
-2440 0 V
Z stroke
1.000 UP
1.000 UL
LTb
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
1.000 UL
LTa
4420 400 M
2440 0 V
stroke
LTb
4420 400 M
63 0 V
2377 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 4300 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (-1)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
4420 555 M
2440 0 V
stroke
LTb
4420 555 M
63 0 V
2377 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 4300 555 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.5)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
4420 710 M
2440 0 V
stroke
LTb
4420 710 M
63 0 V
2377 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 4300 710 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
4420 865 M
2440 0 V
stroke
LTb
4420 865 M
63 0 V
2377 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 4300 865 M
[ [(Helvetica) 200.0 0.0 true true 0 (0.5)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
4420 1020 M
2440 0 V
stroke
LTb
4420 1020 M
63 0 V
2377 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 4300 1020 M
[ [(Helvetica) 200.0 0.0 true true 0 (1)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
4420 400 M
0 620 V
stroke
LTb
4420 400 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 4420 200 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4908 400 M
0 620 V
stroke
LTb
4908 400 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 4908 200 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5396 400 M
0 620 V
stroke
LTb
5396 400 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 5396 200 M
[ [(Helvetica) 200.0 0.0 true true 0 (20)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5884 400 M
0 620 V
stroke
LTb
5884 400 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 5884 200 M
[ [(Helvetica) 200.0 0.0 true true 0 (30)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6372 400 M
0 620 V
stroke
LTb
6372 400 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 6372 200 M
[ [(Helvetica) 200.0 0.0 true true 0 (40)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6860 400 M
0 620 V
stroke
LTb
6860 400 M
0 63 V
0 557 R
0 -63 V
stroke
0.00 0.00 0.00 C 6860 200 M
[ [(Helvetica) 200.0 0.0 true true 0 (50)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
4420 1020 N
0 -620 V
2440 0 V
0 620 V
-2440 0 V
Z stroke
1.000 UP
1.000 UL
LTb
0.500 UL
LT0
0.00 0.00 1.00 C 4420 710 M
0 310 V
49 -310 R
0 -279 V
49 279 R
0 192 V
48 -192 R
0 -66 V
49 66 R
0 -73 V
49 73 R
0 198 V
49 -198 R
0 -282 V
49 282 R
0 310 V
48 -310 R
0 -275 V
49 275 R
0 185 V
49 -185 R
0 -58 V
49 58 R
0 -81 V
49 81 R
0 204 V
48 -204 R
0 -285 V
49 285 R
0 310 V
49 -310 R
0 -272 V
49 272 R
0 179 V
49 -179 R
0 -50 V
48 50 R
0 -88 V
49 88 R
0 209 V
49 -209 R
0 -288 V
49 288 R
0 309 V
49 -309 R
0 -268 V
48 268 R
0 173 V
49 -173 R
0 -43 V
49 43 R
0 -96 V
49 96 R
0 215 V
49 -215 R
0 -291 V
48 291 R
0 308 V
49 -308 R
0 -264 V
49 264 R
0 166 V
49 -166 R
0 -35 V
49 35 R
0 -103 V
48 103 R
0 221 V
49 -221 R
0 -294 V
49 294 R
0 308 V
49 -308 R
0 -260 V
49 260 R
0 159 V
48 -159 R
0 -27 V
49 27 R
0 -111 V
49 111 R
0 226 V
49 -226 R
0 -296 V
49 296 R
0 306 V
48 -306 R
0 -255 V
49 255 R
0 152 V
49 -152 R
0 -19 V
49 19 R
0 -118 V
49 118 R
0 231 V
48 -231 R
0 -298 V
49 298 R
0 305 V
49 -305 R
0 -251 V
1.000 UP
stroke
LT1
0.00 0.00 1.00 C 4420 1020 Circle
4469 431 Circle
4518 902 Circle
4566 644 Circle
4615 637 Circle
4664 908 Circle
4713 428 Circle
4762 1020 Circle
4810 435 Circle
4859 895 Circle
4908 652 Circle
4957 629 Circle
5006 914 Circle
5054 425 Circle
5103 1020 Circle
5152 438 Circle
5201 889 Circle
5250 660 Circle
5298 622 Circle
5347 919 Circle
5396 422 Circle
5445 1019 Circle
5494 442 Circle
5542 883 Circle
5591 667 Circle
5640 614 Circle
5689 925 Circle
5738 419 Circle
5786 1018 Circle
5835 446 Circle
5884 876 Circle
5933 675 Circle
5982 607 Circle
6030 931 Circle
6079 416 Circle
6128 1018 Circle
6177 450 Circle
6226 869 Circle
6274 683 Circle
6323 599 Circle
6372 936 Circle
6421 414 Circle
6470 1016 Circle
6518 455 Circle
6567 862 Circle
6616 691 Circle
6665 592 Circle
6714 941 Circle
6762 412 Circle
6811 1015 Circle
6860 459 Circle
0.500 UL
LT2
0.00 0.00 0.00 C 4420 710 M
2440 0 V
stroke
1.000 UL
LTb
4420 1020 N
0 -620 V
2440 0 V
0 620 V
-2440 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
