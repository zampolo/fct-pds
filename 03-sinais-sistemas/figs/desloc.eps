%!PS-Adobe-2.0 EPSF-2.0
%%Title: desloc.eps
%%Creator: gnuplot 4.2 patchlevel 2 
%%CreationDate: Fri Feb 27 16:44:19 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (desloc.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 2 )
  /Author (zampolo,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Feb 27 16:44:19 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
1.000 UL
LTa
820 471 M
6040 0 V
stroke
LTb
820 471 M
63 0 V
5977 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 700 471 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.1)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
820 1181 M
6040 0 V
stroke
LTb
820 1181 M
63 0 V
5977 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 700 1181 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
820 1890 M
6040 0 V
stroke
LTb
820 1890 M
63 0 V
5977 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 700 1890 M
[ [(Helvetica) 200.0 0.0 true true 0 (0.1)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
820 2600 M
6040 0 V
stroke
LTb
820 2600 M
63 0 V
5977 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 700 2600 M
[ [(Helvetica) 200.0 0.0 true true 0 (0.2)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
820 3310 M
6040 0 V
stroke
LTb
820 3310 M
63 0 V
5977 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 700 3310 M
[ [(Helvetica) 200.0 0.0 true true 0 (0.3)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
820 4019 M
6040 0 V
stroke
LTb
820 4019 M
63 0 V
5977 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 700 4019 M
[ [(Helvetica) 200.0 0.0 true true 0 (0.4)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
820 4729 M
6040 0 V
stroke
LTb
820 4729 M
63 0 V
5977 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 700 4729 M
[ [(Helvetica) 200.0 0.0 true true 0 (0.5)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
820 400 M
0 4400 V
stroke
LTb
820 400 M
0 63 V
0 4337 R
0 -63 V
stroke
0.00 0.00 0.00 C 820 200 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2028 400 M
0 4400 V
stroke
LTb
2028 400 M
0 63 V
0 4337 R
0 -63 V
stroke
0.00 0.00 0.00 C 2028 200 M
[ [(Helvetica) 200.0 0.0 true true 0 (20)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3236 400 M
0 4400 V
stroke
LTb
3236 400 M
0 63 V
0 4337 R
0 -63 V
stroke
0.00 0.00 0.00 C 3236 200 M
[ [(Helvetica) 200.0 0.0 true true 0 (40)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4444 400 M
0 4400 V
stroke
LTb
4444 400 M
0 63 V
0 4337 R
0 -63 V
stroke
0.00 0.00 0.00 C 4444 200 M
[ [(Helvetica) 200.0 0.0 true true 0 (60)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5652 400 M
0 4400 V
stroke
LTb
5652 400 M
0 63 V
0 4337 R
0 -63 V
stroke
0.00 0.00 0.00 C 5652 200 M
[ [(Helvetica) 200.0 0.0 true true 0 (80)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6860 400 M
0 4400 V
stroke
LTb
6860 400 M
0 63 V
0 4337 R
0 -63 V
stroke
0.00 0.00 0.00 C 6860 200 M
[ [(Helvetica) 200.0 0.0 true true 0 (100)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
820 4800 N
820 400 L
6040 0 V
0 4400 V
-6040 0 V
Z stroke
1.000 UP
1.000 UL
LTb
0.500 UL
LT0
0.00 0.00 0.00 C 820 1181 M
60 0 R
0 535 V
61 -535 R
0 1024 V
60 -1024 R
0 1469 V
61 -1469 R
0 1868 V
60 -1868 R
0 2223 V
60 -2223 R
0 2534 V
61 -2534 R
0 2802 V
60 -2802 R
0 3029 V
61 -3029 R
0 3215 V
60 -3215 R
0 3363 V
60 -3363 R
0 3475 V
61 -3475 R
0 3552 V
60 -3552 R
0 3597 V
61 -3597 R
0 3612 V
60 -3612 R
0 3598 V
60 -3598 R
0 3559 V
61 -3559 R
0 3496 V
60 -3496 R
0 3411 V
61 -3411 R
0 3308 V
60 -3308 R
0 3188 V
60 -3188 R
0 3054 V
61 -3054 R
0 2907 V
60 -2907 R
0 2750 V
61 -2750 R
0 2584 V
60 -2584 R
0 2412 V
60 -2412 R
0 2235 V
61 -2235 R
0 2055 V
60 -2055 R
0 1873 V
61 -1873 R
0 1691 V
60 -1691 R
0 1511 V
60 -1511 R
0 1333 V
61 -1333 R
0 1159 V
60 -1159 R
0 990 V
61 -990 R
0 827 V
60 -827 R
0 669 V
60 -669 R
0 519 V
61 -519 R
0 377 V
60 -377 R
0 242 V
61 -242 R
0 117 V
60 -117 R
60 0 R
0 -108 V
61 108 R
0 -207 V
60 207 R
0 -297 V
61 297 R
0 -378 V
60 378 R
0 -449 V
60 449 R
0 -512 V
61 512 R
0 -566 V
60 566 R
0 -612 V
61 612 R
0 -650 V
60 650 R
0 -679 V
60 679 R
0 -702 V
61 702 R
0 -718 V
60 718 R
4021 454 L
61 727 R
0 -730 V
60 730 R
0 -727 V
60 727 R
0 -719 V
61 719 R
0 -706 V
60 706 R
0 -689 V
61 689 R
0 -668 V
60 668 R
0 -644 V
60 644 R
0 -617 V
61 617 R
0 -587 V
60 587 R
0 -556 V
61 556 R
0 -522 V
60 522 R
0 -487 V
60 487 R
0 -452 V
61 452 R
0 -415 V
60 415 R
0 -379 V
61 379 R
0 -342 V
60 342 R
0 -306 V
60 306 R
0 -270 V
61 270 R
0 -235 V
60 235 R
0 -200 V
61 200 R
0 -167 V
60 167 R
0 -136 V
60 136 R
0 -105 V
61 105 R
0 -76 V
60 76 R
0 -49 V
61 49 R
0 -24 V
60 24 R
60 0 R
0 21 V
61 -21 R
0 41 V
60 -41 R
0 60 V
61 -60 R
0 76 V
60 -76 R
0 90 V
60 -90 R
0 103 V
61 -103 R
0 114 V
60 -114 R
0 123 V
61 -123 R
0 131 V
60 -131 R
0 137 V
60 -137 R
0 141 V
61 -141 R
0 144 V
60 -144 R
0 146 V
61 -146 R
0 147 V
60 -147 R
0 146 V
60 -146 R
0 145 V
61 -145 R
0 142 V
60 -142 R
0 139 V
61 -139 R
0 135 V
60 -135 R
0 130 V
1.000 UP
stroke
LT1
0.00 0.00 0.00 C 820 1181 Circle
880 1716 Circle
941 2205 Circle
1001 2650 Circle
1062 3049 Circle
1122 3404 Circle
1182 3715 Circle
1243 3983 Circle
1303 4210 Circle
1364 4396 Circle
1424 4544 Circle
1484 4656 Circle
1545 4733 Circle
1605 4778 Circle
1666 4793 Circle
1726 4779 Circle
1786 4740 Circle
1847 4677 Circle
1907 4592 Circle
1968 4489 Circle
2028 4369 Circle
2088 4235 Circle
2149 4088 Circle
2209 3931 Circle
2270 3765 Circle
2330 3593 Circle
2390 3416 Circle
2451 3236 Circle
2511 3054 Circle
2572 2872 Circle
2632 2692 Circle
2692 2514 Circle
2753 2340 Circle
2813 2171 Circle
2874 2008 Circle
2934 1850 Circle
2994 1700 Circle
3055 1558 Circle
3115 1423 Circle
3176 1298 Circle
3236 1181 Circle
3296 1073 Circle
3357 974 Circle
3417 884 Circle
3478 803 Circle
3538 732 Circle
3598 669 Circle
3659 615 Circle
3719 569 Circle
3780 531 Circle
3840 502 Circle
3900 479 Circle
3961 463 Circle
4021 454 Circle
4082 451 Circle
4142 454 Circle
4202 462 Circle
4263 475 Circle
4323 492 Circle
4384 513 Circle
4444 537 Circle
4504 564 Circle
4565 594 Circle
4625 625 Circle
4686 659 Circle
4746 694 Circle
4806 729 Circle
4867 766 Circle
4927 802 Circle
4988 839 Circle
5048 875 Circle
5108 911 Circle
5169 946 Circle
5229 981 Circle
5290 1014 Circle
5350 1045 Circle
5410 1076 Circle
5471 1105 Circle
5531 1132 Circle
5592 1157 Circle
5652 1181 Circle
5712 1202 Circle
5773 1222 Circle
5833 1241 Circle
5894 1257 Circle
5954 1271 Circle
6014 1284 Circle
6075 1295 Circle
6135 1304 Circle
6196 1312 Circle
6256 1318 Circle
6316 1322 Circle
6377 1325 Circle
6437 1327 Circle
6498 1328 Circle
6558 1327 Circle
6618 1326 Circle
6679 1323 Circle
6739 1320 Circle
6800 1316 Circle
6860 1311 Circle
0.500 UL
LT2
0.00 0.00 0.00 C 820 1181 M
6040 0 V
stroke
LT3
0.00 0.00 1.00 C 820 1181 M
60 0 R
61 0 R
60 0 R
61 0 R
60 0 R
60 0 R
61 0 R
60 0 R
61 0 R
60 0 R
60 0 R
61 0 R
60 0 R
61 0 R
60 0 R
60 0 R
61 0 R
60 0 R
61 0 R
60 0 R
60 0 R
0 535 V
61 -535 R
0 1024 V
60 -1024 R
0 1469 V
61 -1469 R
0 1868 V
60 -1868 R
0 2223 V
60 -2223 R
0 2534 V
61 -2534 R
0 2802 V
60 -2802 R
0 3029 V
61 -3029 R
0 3215 V
60 -3215 R
0 3363 V
60 -3363 R
0 3475 V
61 -3475 R
0 3552 V
60 -3552 R
0 3597 V
61 -3597 R
0 3612 V
60 -3612 R
0 3598 V
60 -3598 R
0 3559 V
61 -3559 R
0 3496 V
60 -3496 R
0 3411 V
61 -3411 R
0 3308 V
60 -3308 R
0 3188 V
60 -3188 R
0 3054 V
61 -3054 R
0 2907 V
60 -2907 R
0 2750 V
61 -2750 R
0 2584 V
60 -2584 R
0 2412 V
60 -2412 R
0 2235 V
61 -2235 R
0 2055 V
60 -2055 R
0 1873 V
61 -1873 R
0 1691 V
60 -1691 R
0 1511 V
60 -1511 R
0 1333 V
61 -1333 R
0 1159 V
60 -1159 R
0 990 V
61 -990 R
0 827 V
60 -827 R
0 669 V
60 -669 R
0 519 V
61 -519 R
0 377 V
60 -377 R
0 242 V
61 -242 R
0 117 V
60 -117 R
60 0 R
0 -108 V
61 108 R
0 -207 V
60 207 R
4625 884 L
61 297 R
0 -378 V
60 378 R
0 -449 V
60 449 R
0 -512 V
61 512 R
0 -566 V
60 566 R
0 -612 V
61 612 R
0 -650 V
60 650 R
0 -679 V
60 679 R
0 -702 V
61 702 R
0 -718 V
60 718 R
0 -727 V
61 727 R
0 -730 V
60 730 R
0 -727 V
60 727 R
0 -719 V
61 719 R
0 -706 V
60 706 R
0 -689 V
61 689 R
0 -668 V
60 668 R
0 -644 V
60 644 R
0 -617 V
61 617 R
0 -587 V
60 587 R
0 -556 V
61 556 R
0 -522 V
60 522 R
0 -487 V
60 487 R
0 -452 V
61 452 R
0 -415 V
60 415 R
0 -379 V
61 379 R
0 -342 V
60 342 R
0 -306 V
60 306 R
0 -270 V
61 270 R
0 -235 V
60 235 R
0 -200 V
61 200 R
0 -167 V
60 167 R
0 -136 V
60 136 R
0 -105 V
61 105 R
0 -76 V
60 76 R
0 -49 V
61 49 R
0 -24 V
60 24 R
1.000 UP
stroke
LT4
0.00 0.00 1.00 C 820 1181 Circle
880 1181 Circle
941 1181 Circle
1001 1181 Circle
1062 1181 Circle
1122 1181 Circle
1182 1181 Circle
1243 1181 Circle
1303 1181 Circle
1364 1181 Circle
1424 1181 Circle
1484 1181 Circle
1545 1181 Circle
1605 1181 Circle
1666 1181 Circle
1726 1181 Circle
1786 1181 Circle
1847 1181 Circle
1907 1181 Circle
1968 1181 Circle
2028 1181 Circle
2088 1716 Circle
2149 2205 Circle
2209 2650 Circle
2270 3049 Circle
2330 3404 Circle
2390 3715 Circle
2451 3983 Circle
2511 4210 Circle
2572 4396 Circle
2632 4544 Circle
2692 4656 Circle
2753 4733 Circle
2813 4778 Circle
2874 4793 Circle
2934 4779 Circle
2994 4740 Circle
3055 4677 Circle
3115 4592 Circle
3176 4489 Circle
3236 4369 Circle
3296 4235 Circle
3357 4088 Circle
3417 3931 Circle
3478 3765 Circle
3538 3593 Circle
3598 3416 Circle
3659 3236 Circle
3719 3054 Circle
3780 2872 Circle
3840 2692 Circle
3900 2514 Circle
3961 2340 Circle
4021 2171 Circle
4082 2008 Circle
4142 1850 Circle
4202 1700 Circle
4263 1558 Circle
4323 1423 Circle
4384 1298 Circle
4444 1181 Circle
4504 1073 Circle
4565 974 Circle
4625 884 Circle
4686 803 Circle
4746 732 Circle
4806 669 Circle
4867 615 Circle
4927 569 Circle
4988 531 Circle
5048 502 Circle
5108 479 Circle
5169 463 Circle
5229 454 Circle
5290 451 Circle
5350 454 Circle
5410 462 Circle
5471 475 Circle
5531 492 Circle
5592 513 Circle
5652 537 Circle
5712 564 Circle
5773 594 Circle
5833 625 Circle
5894 659 Circle
5954 694 Circle
6014 729 Circle
6075 766 Circle
6135 802 Circle
6196 839 Circle
6256 875 Circle
6316 911 Circle
6377 946 Circle
6437 981 Circle
6498 1014 Circle
6558 1045 Circle
6618 1076 Circle
6679 1105 Circle
6739 1132 Circle
6800 1157 Circle
6860 1181 Circle
0.500 UL
LT5
0.00 0.00 0.00 C 820 1181 M
6040 0 V
stroke
1.000 UL
LTb
820 4800 N
820 400 L
6040 0 V
0 4400 V
-6040 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
